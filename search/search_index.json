{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Felh\u0151 \u00e9s DevOps alapok labor gyakorlat","text":"<p>Ezen az oldalon tal\u00e1lod a kurzushoz tartoz\u00f3 hivatalos jegyzeteket. Ezen fel\u00fcl a repoban tal\u00e1lhat\u00f3 forr\u00e1sk\u00f3dok mind kommentekkel vannak ell\u00e1tva a meg\u00e9rt\u00e9s seg\u00edt\u00e9se c\u00e9lj\u00e1b\u00f3l. Azonban ezek a forr\u00e1sok nem p\u00f3tolj\u00e1k a gyakorlaton elhangzottakat.</p> <p>Kommunik\u00e1ci\u00f3: CooSpace f\u00f3rum.</p> <p>Ha a jegyzetben b\u00e1rmilyen hib\u00e1t tal\u00e1lsz (nyelvtani, technikai... stb.), megk\u00f6sz\u00f6n\u00f6m ha jelzed.</p>"},{"location":"ansible/","title":"Ansible","text":""},{"location":"ansible/#alap-fogalmak","title":"Alap fogalmak","text":""},{"location":"ansible/#configuration-management","title":"Configuration Management","text":"<p>Ezt a fogalmat term\u00e9szetesen IT szempontb\u00f3l fogjuk \u00e9rtelmezni. Konfigur\u00e1ci\u00f3 alatt \u00e9rthetj\u00fck:</p> <ul> <li>egy komplett IT ifrastrukt\u00fara fel\u00e9p\u00edt\u00e9s\u00e9t (routerek, switchek, kliensek \u00f6sszess\u00e9ge)</li> <li>egy szerver hardveres fel\u00e9p\u00edt\u00e9s\u00e9t \u00e9s BIOS be\u00e1ll\u00edt\u00e1s\u00e1t</li> <li>a telep\u00edtett OS be\u00e1ll\u00edt\u00e1sait \u00e9s telep\u00edtett programjait</li> <li>egy telep\u00edtett program be\u00e1ll\u00edt\u00e1sait</li> </ul> <p>A kurzus sor\u00e1n m\u00e1r l\u00e1thattuk az \u00f6sszes elemet, hiszen a Vagrantal a virtu\u00e1lis g\u00e9pekhez virtualiz\u00e1lt hardvert \u00e1ll\u00edtottunk be (CPU, RAM), az \u00e1ltaluk haszn\u00e1lt h\u00e1l\u00f3zatot is defini\u00e1ltuk, valamint egy kiv\u00e1lasztott OS-en eszk\u00f6z\u00f6t\u00fcnk v\u00e1ltoz\u00e1sokat \u00e9s telep\u00edt\u00e9seket. </p>"},{"location":"ansible/#deklarativ-leiras","title":"Deklarat\u00edv le\u00edr\u00e1s","text":"<p>Vagrant eset\u00e9n Ruby nyelven defini\u00e1ltunk mindent, mely egy imperat\u00edv nyelv. Le\u00edrtuk az eg\u00e9sz folyamatot, hogy el\u00e9rj\u00fck a k\u00edv\u00e1nt eredm\u00e9nyt. R\u00f6viden: a hogyan r\u00e9szt \u00edrtuk meg. </p> <p>Megjegyz\u00e9s: a VM hardver param\u00e9terei tekinthet\u0151k deklarat\u00edv le\u00edr\u00e1snak az \u00e1ltalunk haszn\u00e1lt esetben. Komolyabb Ruby programoz\u00e1s bevet\u00e9se eset\u00e9n m\u00e1r nem helyt\u00e1ll\u00f3 kijelent\u00e9s.</p> <p>A deklarat\u00edv le\u00edr\u00e1s eset\u00e9n nem a hogyant \u00edrjuk le, hanem a mit. Ebben az esetben csak az el\u00e9rni k\u00edv\u00e1nt c\u00e9lt fogalmazzuk meg, \u00e9s a megval\u00f3s\u00edt\u00e1st r\u00e1b\u00edzzuk a keretrendszerre. Nem foglalkozunk azzal, hogyan oldja meg. </p> <p>Rally hasonlattal \u00e9lve: a mitf\u00e1rer mondja az ir\u00e1nyt (mit), a versenyz\u0151 korm\u00e1nyozza oda az aut\u00f3t a kell\u0151 sebess\u00e9ggel \u00e9s sz\u00f6gben (hogyan).</p>"},{"location":"ansible/#ansible-felepitese","title":"Ansible fel\u00e9p\u00edt\u00e9se","text":""},{"location":"ansible/#mire-hasznaljuk","title":"Mire haszn\u00e1ljuk?","text":"<p>B\u00e1r sok esetben haszn\u00e1lhat\u00f3 lenne, a kurzus sor\u00e1n oper\u00e1ci\u00f3s rendszerek \u00e9s azokra telep\u00edtett szoftverek konfigur\u00e1l\u00e1s\u00e1ra fogjuk bevetni. Ez a leggyakoribb alkalmaz\u00e1sa is. </p>"},{"location":"ansible/#playbook","title":"Playbook","text":"<p>Ez a bemeneti YAML f\u00e1jl. 2 dolgot kell mindenk\u00e9ppen tartalmaznia: hosts &amp; tasks. A hosts mondja meg, hogy a playbook milyen szerverekkel l\u00e9tes\u00edtsen kapcsolatot. A tasks pedig a szervereken el\u00e9rend\u0151 \u00e1llapotot \u00edrja le.</p>"},{"location":"ansible/#inventory","title":"Inventory","text":"<p>A strukt\u00far\u00e1lts\u00e1g \u00e9rdek\u00e9ben ezt is YAML-k\u00e9nt kezelj\u00fck. Itt a kezelni k\u00edv\u00e1nt szerverek kapcsol\u00f3d\u00e1si adatait t\u00e1roljuk. A szerverek ak\u00e1r csoportokba is szervezhet\u0151ek, \u00edgy amikor egy playbook adott csoporton hajt\u00f3dik v\u00e9gre, p\u00e1rhuzamosan t\u00f6rt\u00e9nik a konfigur\u00e1ci\u00f3juk.</p>"},{"location":"ansible/#hasznalata","title":"Haszn\u00e1lata","text":"<pre><code>ansible-playbook -i inventory.yml playbook.yml\n</code></pre>"},{"location":"bash/","title":"Bash scripting (r\u00f6vid ism\u00e9tl\u00e9s)","text":""},{"location":"bash/#shebang","title":"Shebang (#!)","text":"<p>A shebang az els\u0151 sor egy Bash szkriptben, \u00e9s megmondja a rendszernek, hogy melyik \u00e9rtelmez\u0151t haszn\u00e1lja. A Bash szkriptek eset\u00e9n \u00e1ltal\u00e1ban \u00edgy n\u00e9z ki: #!/bin/bash</p>"},{"location":"bash/#valtozok","title":"V\u00e1ltoz\u00f3k","text":"<p>V\u00e1ltoz\u00f3k l\u00e9trehoz\u00e1sa \u00e9rt\u00e9kad\u00e1ssal:</p> <pre><code>name=\"John\"\n</code></pre> <p>Hogy ez a v\u00e1ltoz\u00f3 haszn\u00e1lhat\u00f3 legyen az Bash \u00e1ltal ind\u00edtott programokban vagy szkriptekben (egy fajta \u00f6r\u00f6kl\u0151d\u00e9snek is tekinthet\u0151 m\u00f3don), az export kulcssz\u00f3t kell haszn\u00e1lni.</p> <pre><code>export name\n</code></pre> <p>A v\u00e1ltoz\u00f3 \u00e9rt\u00e9k\u00e9t a $ szimb\u00f3lum seg\u00edts\u00e9g\u00e9vel lehet el\u00e9rni:</p> <pre><code>echo \"Hello, $name!\"\n</code></pre>"},{"location":"bash/#fajl-es-navigacios-muveletek","title":"F\u00e1jl \u00e9s navig\u00e1ci\u00f3s m\u0171veletek","text":"<p>Leggyakoribbak: cd, touch, rm, mv, cp, \u00e9s cat.</p>"},{"location":"bash/#ifelse","title":"if...else","text":"<p>A felt\u00e9teles utas\u00edt\u00e1sok lehet\u0151v\u00e9 teszik d\u00f6nt\u00e9sek meghozatal\u00e1t a szkriptben:</p> <pre><code>if [ \"$age\" -ge 18 ]; then\n echo \"You are an adult\"\nelse\n echo \"You are not an adult\"\nfi\n</code></pre>"},{"location":"bash/#aritmetikai-muveletek","title":"Aritmetikai m\u0171veletek","text":"<p>A (( )) seg\u00edts\u00e9g\u00e9vel lehet aritmetikai m\u0171veleteket v\u00e9grehajtani:</p> <pre><code>score=$((5 + 3))\necho \"5 + 3 = $score\"\n</code></pre>"},{"location":"bash/#parancs-beagyazas","title":"Parancs be\u00e1gyaz\u00e1s","text":"<p>Lehets\u00e9ges egy parancs kimenet\u00e9t v\u00e1ltoz\u00f3ban t\u00e1rolni a be\u00e1gyaz\u00e1s seg\u00edts\u00e9g\u00e9vel: aktualis_datum=$(date +%Y-%m-%d)</p>"},{"location":"bash/#listak","title":"List\u00e1k","text":"<p>L\u00e9trehoz\u00e1sa:</p> <pre><code>exampleArray=(\"this\" \"is\" \"it\")\necho \"First element: ${exampleArray[0]}\"\n</code></pre> <p>Parancs kimenet\u00e9nek t\u00f6mbb\u00e9 alak\u00edt\u00e1sa:</p> <pre><code>libContent=$(ls)\n</code></pre>"},{"location":"bash/#ciklusok-for-es-while","title":"Ciklusok (for \u00e9s while)","text":"<p>A Bash t\u00e1mogatja a for \u00e9s while ciklusokat list\u00e1k bej\u00e1r\u00e1s\u00e1hoz vagy parancsok ism\u00e9telt v\u00e9grehajt\u00e1s\u00e1hoz:</p> <pre><code>for i in {1..5}; do\n echo \"$i\"\ndone\ncounter=0\nwhile [ $counter -lt 5 ]; do\n echo \"Counter: $counter\"\n ((counter++))\ndone\n</code></pre>"},{"location":"bash/#fuggvenyek","title":"F\u00fcggv\u00e9nyek","text":"<p>F\u00fcggv\u00e9nyek defini\u00e1l\u00e1sa szok\u00e1sos m\u00f3don t\u00f6rt\u00e9nik, annyi k\u00fcl\u00f6nbs\u00e9ggel hogy nincs argumentum list\u00e1ja. Ha szeretn\u00e9nk bemeneti argumentumokat, $1 $2... stb. v\u00e1ltoz\u00f3kat tudjuk haszn\u00e1lni.</p> <pre><code>function greet() {\n echo \"Hello, $1!\"\n}\n\ngreet \"Alice\"\n</code></pre>"},{"location":"bash/#parancssori-argumentumok","title":"Parancssori argumentumok","text":"<p>Ak\u00e1r csak a f\u00fcggv\u00e9nyek eset\u00e9n:</p> <pre><code>#!/bin/bash\n# File name: runthis.sh\necho \"First arg: $1\"\necho \"Second arg: $2\"\n</code></pre> <p>Szkript f\u00e1jl futtat\u00e1sa:</p> <pre><code>./runthis.sh first second\n</code></pre>"},{"location":"bash/#bemenet-es-kimenet-atiranyitasa","title":"Bemenet \u00e9s kimenet \u00e1tir\u00e1ny\u00edt\u00e1sa","text":"<p>A Bash lehet\u0151v\u00e9 teszi a bemenet \u00e9s kimenet \u00e1tir\u00e1ny\u00edt\u00e1s\u00e1t olyan szimb\u00f3lumokkal, mint &lt; a bemenet \u00e9s &gt; a kimenet sz\u00e1m\u00e1ra. Bemenet \u00e1tir\u00e1ny\u00edt\u00e1sa f\u00e1jlb\u00f3l</p> <pre><code>cat &lt; input_file.txt\n</code></pre> <p>Kimenet \u00e1tir\u00e1ny\u00edt\u00e1sa f\u00e1jlba (fel\u00fcl\u00edr\u00e1s)</p> <pre><code>echo \"Hello\" &gt; output_file.txt\n</code></pre> <p>Kimenet \u00e1tir\u00e1ny\u00edt\u00e1sa f\u00e1jlba (hozz\u00e1f\u0171z\u00e9s)</p> <pre><code>echo \"World\" &gt;&gt; output_file.txt\n</code></pre> <p>\u00c9rdemes ut\u00e1nan\u00e9zni az stdin, stdout, stderr kifejez\u00e9seknek is.</p>"},{"location":"bash/#pipe","title":"Pipe (|)","text":"<p>A pipe arra szolg\u00e1l, hogy egy parancs kimenet\u00e9t tov\u00e1bb\u00edtsa egy m\u00e1siknak bemenetk\u00e9nt. Kilist\u00e1zza az \u00f6sszes f\u00e1jlt az aktu\u00e1lis k\u00f6nyvt\u00e1rban, majd tov\u00e1bb\u00edtja az eredm\u00e9nyt a 'grep' parancsnak mely lesz\u0171ri az eredm\u00e9ny a .txt f\u00e1jlokra.</p> <pre><code>ls | grep \".txt\"\n</code></pre>"},{"location":"bash/#exit-code","title":"Exit code","text":"<p>Minden Bash parancs visszaad egy kil\u00e9p\u00e9si st\u00e1tusz k\u00f3dot. Az 0 \u00e9rt\u00e9k sikert jelent, m\u00edg a nem nulla \u00e9rt\u00e9kek hib\u00e1t jeleznek. A legut\u00f3bbi program kil\u00e9p\u00e9si k\u00f3dj\u00e1t a $? v\u00e1ltoz\u00f3val tudjuk lek\u00e9rdezni. A return kulcssz\u00f3val van lehet\u0151s\u00e9g\u00fcnk saj\u00e1t visszat\u00e9r\u00e9si \u00e9rt\u00e9ket adni egy-egy szkriptnek.</p>"},{"location":"docker/","title":"Docker","text":""},{"location":"docker/#kontener-vs-virtualis-gep","title":"Kont\u00e9ner vs. virtu\u00e1lis g\u00e9p","text":""},{"location":"docker/#osztott-kernel","title":"Osztott kernel","text":"<p>A vagrantos jegyzetben m\u00e1r besz\u00e9lt\u00fcnk a VM-ekr\u0151l, \u00edgy ezekre most k\u00fcl\u00f6n nem t\u00e9r\u00fcnk ki. A kont\u00e9nerek eset\u00e9n l\u00e9nyeges k\u00fcl\u00f6nbs\u00e9g, hogy a host OS kernele ker\u00fcl megoszt\u00e1sra a guest rendszerrel. A hostt\u00f3l t\u00f6rt\u00e9n\u0151 izol\u00e1ci\u00f3t maga a kernel oldja meg k\u00fcl\u00f6nb\u00f6z\u0151 szoftveres tr\u00fckk\u00f6kkel.  (Forr\u00e1s: https://d1bbu1rz26yvjt.cloudfront.net/wp-content/uploads/2020/01/13200917/vm_vs_container-1170x550.png) Ebb\u0151l k\u00f6vetkezik, hogy a kont\u00e9nerben csak olyan OS futhat ami a host rendszer kernele meg tud hajtani. Teh\u00e1t egy Debian host futtathat RPM alap\u00fa Linux kont\u00e9nereket is, hiszen a kernel\u00fck egyezik.</p>"},{"location":"docker/#minimal-os-distroless-kontener","title":"Minimal OS &amp; distroless kont\u00e9ner","text":"<p>Az \u00e1ltalunk t\u00e1rgyalt Dockert haszn\u00e1l\u00f3 kont\u00e9nerek nem teljes\u00e9rt\u00e9k\u0171 oper\u00e1ci\u00f3s rendszereket tartalmaznak. Csak a legminim\u00e1lisabb dolgokat tartalmazz\u00e1k, melyek az adott szerver vagy alkalmaz\u00e1s futtat\u00e1s\u00e1hoz sz\u00fcks\u00e9gesek.</p>"},{"location":"docker/#komponensek","title":"Komponensek","text":""},{"location":"docker/#docker-halozat","title":"Docker h\u00e1l\u00f3zat","text":"<p>A kurzus sor\u00e1n a birdge h\u00e1l\u00f3zat t\u00edpust fogjuk haszn\u00e1lni. Ez azt jelenti, hogy a kont\u00e9nerek egy virtu\u00e1lis, szepar\u00e1lt h\u00e1l\u00f3zathoz kapcsol\u00f3dnak. A dockerrel fogjuk szab\u00e1lyozni, hogy az egyes kont\u00e9nerek portjai a host g\u00e9p mely portjaira tov\u00e1bb\u00edt\u00f3djanak. Ezen a porton lehet majd el\u00e9rni azokat ak\u00e1r a hostr\u00f3l ak\u00e1r a h\u00e1l\u00f3zatr\u00f3l.</p>"},{"location":"docker/#volume","title":"Volume","text":"<p>A kont\u00e9nerek fontos tulajdons\u00e1ga, hogy k\u00f6nnyen eldobhat\u00f3ak \u00e9s \u00fajra l\u00e9trehozhat\u00f3ak. Azonban amikor nem stateless egy kont\u00e9ner, p\u00e9ld\u00e1ul adatb\u00e1zist futtatunk benne, akkor valahogy az adatoknak t\u00fal kell \u00e9lni a kont\u00e9ner lecser\u00e9l\u00e9s\u00e9t. Erre a volume a megold\u00e1s. Kijel\u00f6l\u00fcnk egy f\u00e1jlt vagy mapp\u00e1t a kont\u00e9nerben \u00e9s egy docker volumera k\u00f6tj\u00fck. Ekkor ez a f\u00e1jl vagy mappa a kont\u00e9ner \u00e1ltal izol\u00e1lt ter\u00fcleten k\u00edv\u00fclre ker\u00fcl a host g\u00e9pen \u00e9s \u00edgy megmarad a kont\u00e9ner megsz\u0171n\u00e9se ut\u00e1n is.</p>"},{"location":"docker/#secret","title":"Secret","text":"<p>Ha biztons\u00e1gosan szeretn\u00e9nk t\u00e1rolni jelszavakat vagy kulcsokat a Dockerben, valamint ezeket fel szeretn\u00e9nk haszn\u00e1lni egy-egy kont\u00e9nerben, akkor secret objektumokat defini\u00e1lunk. Ezek titkos\u00edtva t\u00e1rolj\u00e1k az adatokat, a kont\u00e9nerbe pedig titkos\u00edtatlan sz\u00f6veges f\u00e1jl form\u00e1j\u00e1ban teszik el\u00e9rhet\u0151v\u00e9 ezeket.</p>"},{"location":"docker/#image","title":"Image","text":"<p>A kont\u00e9nerek Docker imageb\u0151l indulnak ki \u00e9s ezekre \u00e9p\u00edtkez\u00fcnk. Egy Docker fileban miut\u00e1n megjel\u00f6lt\u00fck a kiindul\u00f3 \u00e1llapotot, k\u00fcl\u00f6nb\u00f6z\u0151 shell parancsokkal konfigur\u00e1ljuk az \u00e1ltalunk azt\u00e1n buildelt imaget. A kont\u00e9ner ezt az buildet imaget kl\u00f3nozza \u00e9s futtatja, p\u00e9ld\u00e1nyos\u00edtja ha \u00fagy tetszik. Term\u00e9szetesen vannak el\u0151re elk\u00e9sz\u00edtett imagek, melyekre nem \u00e9p\u00edtkez\u00fcnk hanem csak futtatjuk. Ilyenek p\u00e9ld\u00e1ul az adatb\u00e1zisok, CMS rendszerek, Cloud drive alkalmaz\u00e1sok... stb. </p>"},{"location":"docker/#folyamat","title":"Folyamat","text":"<ul> <li>L\u00e9trehozunk egy Dockerfilet \u00e9s a kiindul\u00e1si alapot addig m\u00f3dos\u00edtjuk m\u00edg az \u00e1ltalunk futtatni k\u00edv\u00e1nt k\u00f3dot v\u00e9gre nem hajtja ind\u00edt\u00e1skor.</li> <li>Ezt a f\u00e1jlt buildelj\u00fck. A verzi\u00f3 jel\u00f6l\u00e9s hivatalos angol neve a tag, viszont \u00edgy \u00e9rthet\u0151bb a funkci\u00f3ja.</li> </ul> <pre><code>docker build -t ___image_neve:verzio___ .\n</code></pre> <ul> <li>Futtatjuk ezt az imaget.</li> </ul> <pre><code>docker run -d --name ___kontener_neve___ ___image_neve:verzio___\n</code></pre>"},{"location":"docker/#docker-compose","title":"Docker Compose","text":"<p>Tekinthetj\u00fck a Docker egyfajta Vagrantfilej\u00e1nak. Egy \u00f6sszegz\u0151, YML mely a kont\u00e9neres infrastrukt\u00fara \u00f6sszes elem\u00e9t le\u00edrja. Defini\u00e1lunk benne kont\u00e9nereket, port nyit\u00e1sokat, volumeokat \u00e9s h\u00e1l\u00f3zatokat. Egy f\u00e1jlal kezelhet\u0151v\u00e9 v\u00e1lik \u00edgy t\u00f6bb dockeres elem. Compose f\u00e1jl futtat\u00e1sa:</p> <pre><code>docker compose -f compose-file.yml up -d\n</code></pre> <p> Compose f\u00e1jl le\u00e1ll\u00edt\u00e1sa (a volumeokat \u00e9s secreteket nem t\u00f6rli):</p> <pre><code>docker compose -f compose-file.yml down\n</code></pre>"},{"location":"docker/#swarm","title":"Swarm","text":"<p>T\u00f6bb szerver klaszterbe k\u00f6t\u00e9s\u00e9re a Docker swarm szolg\u00e1l. Ilyenkor a rendszer automatikusan osztja el a rendelkez\u00e9sre \u00e1ll\u00f3 er\u0151forr\u00e1sok k\u00f6zt a kont\u00e9nerek futtat\u00e1s\u00e1t.</p>"},{"location":"faq/","title":"FAQ","text":"<p>Hogy lesz az oszt\u00e1lyoz\u00e1s?</p> <p>UNDER DEVELOPMENT</p> <p>K\u00f6telez\u0151 bej\u00e1rni?</p> <p>Igen. \u00c1ltal\u00e1ban t\u00faljelentkez\u00e9s van, ez\u00e9rt tiszteld meg ezzel azt aki nem jutott be.</p> <p>Hol folyik a kommunik\u00e1ci\u00f3?</p> <p>99%-ban CooSpace fel\u00fcleten.</p>"},{"location":"jenkins/","title":"Jenkins","text":""},{"location":"jenkins/#cicd","title":"CI/CD","text":"<p>A Jenkins els\u0151dlegesen a CI (Continouos Integrity) eszk\u00f6z. Feladata, hogy a gitben tal\u00e1lhat\u00f3 k\u00f3dokra trigger esem\u00e9ny hat\u00e1s\u00e1ra (polling, push, pull request) checkoutolja \u00e9s ezekre teszteket futtasson. Hogy pontosan mit \u00e9s hogyan, azt pipeline f\u00e1jlban defini\u00e1ljuk. A CI akkor hat\u00e9kony, ha minden push esem\u00e9nyre lefuttatja az alapvet\u0151 teszteket.  A CD (ak\u00e1r Delivery, ak\u00e1r Deployment) nem szorosan a Jenkins feladata azonban a gyakorlatban gyakran arra is haszn\u00e1lj\u00e1k \u00edgy ezt mi bemutatjuk. Megjegyz\u00e9s: A kurzus sor\u00e1n nem fogunk triggereket bemutatni, mivel lok\u00e1lis k\u00f6rnyezetben a beadand\u00f3k \u00edr\u00e1sa sor\u00e1n voltak technikai neh\u00e9zs\u00e9gek. GitHub Actions \u00e9s GitLab eset\u00e9n ker\u00fcl majd bemutat\u00e1sra.</p>"},{"location":"jenkins/#job-es-pipeline-kozti-kulonbseg","title":"Job \u00e9s pipeline k\u00f6zti k\u00fcl\u00f6nbs\u00e9g","text":"<p>A job \u00e9s a pipeline fogalma \u00f6sszemos\u00f3dhat egyes esetekben. A legk\u00e9zenfekv\u0151bb k\u00fcl\u00f6nbs\u00e9g, hogy a job az ami defini\u00e1lja a pipeline k\u00f3dj\u00e1nak el\u00e9r\u00e9s\u00e9t \u00e9s futtat\u00e1s\u00e1t. Az oka ami miatt \u00f6sszem\u00f3s\u00f3dik a k\u00e9t fogalom gyakran, hogy rengeteg dolog a pipelineb\u00f3l is m\u00f3dos\u00edthat\u00f3 ami alapvet\u0151en a jobhoz tartozik.</p>"},{"location":"jenkins/#pipeline-felepitese","title":"Pipeline fel\u00e9p\u00edt\u00e9se","text":"<p>Strukt\u00far\u00e1lis:</p> <ul> <li>agent: Defini\u00e1lja a pipelinet futtat\u00f3 nodeot. A mi p\u00e9ld\u00e1nkban ezek Docker agentek lesznek.</li> <li>stages &amp; stage: f\u00e1zisok defini\u00e1l\u00e1sa</li> <li>step: stagen bel\u00fcli legelemibb m\u0171veletek blokkja</li> </ul> <p>M\u0171veletek:</p> <ul> <li>git: git repository checkout v\u00e9grehajt\u00e1sa</li> <li>sh: shell parancs futtat\u00e1sa</li> </ul>"},{"location":"jenkins/#job-definialasa-kodbol-jenkins-configuration-as-code","title":"Job defini\u00e1l\u00e1sa k\u00f3db\u00f3l (Jenkins Configuration as Code)","text":"<p>A letebb l\u00e1that\u00f3 k\u00f3dok l\u00e9trehozhat\u00f3k a fel\u00fcleten is. New item --&gt; Pipeline. A k\u00f6vetkez\u0151 oldal alj\u00e1n v\u00e1laszthatjuk ki, hogy Pipeline script (azaz helyben, a Jenkinsen \u00edrt \u00e9s t\u00e1rolt) vagy Pipeline script from SCM (source code management, azaz gitben t\u00e1rolt) be\u00e1ll\u00edt\u00e1sokat haszn\u00e1ljunk. A jobok k\u00f3db\u00f3l t\u00f6rt\u00e9n\u0151 defini\u00e1l\u00e1s\u00e1t a Configuration as Code plugin t\u00e1mogatja.</p>"},{"location":"jenkins/#pipeline-beolvasasa-gitbol-job-definitional","title":"Pipeline beolvas\u00e1sa gitb\u0151l Job definitional","text":"<pre><code>pipelineJob('CI - GIT') {\ndefinition {\n        cpsScm {\n            scm {\n                git {\n                remote {\n                    url('https://github.com/Zsomx/express_example.git')\n                }\n                branch('*/2022.jenkins')\n                }\n            }\n        lightweight()\n        scriptPath('ci.jenkinsfile')\n        }\n    }\n}\n</code></pre> <p>A konfigur\u00e1ci\u00f3 r\u00e9szleteinek meg\u00e9rt\u00e9se nincs a kurzus keretei k\u00f6zt, ami fontos:</p> <ul> <li>url: a Jenkinsfile (pipeline) git rep\u00f3j\u00e1t defini\u00e1ljuk</li> <li>branch: az adott rep\u00f3 branch\u00e9t defini\u00e1lja ahol a pipeline f\u00e1jl tal\u00e1lhat\u00f3</li> <li>lightweight(): azt val\u00f3s\u00edtja meg, hogy a Job fut\u00e1sakor CSAK a pipeline k\u00f3d ker\u00fcl let\u00f6lt\u00e9sre, nem az eg\u00e9sz rep\u00f3</li> <li>scriptPath('filename'): az adott nev\u0171 pipeline f\u00e1jlt fogja let\u00f6lteni \u00e9s v\u00e9grehajtani a job</li> </ul>"},{"location":"jenkins/#pipeline-beegetve-job-definitionba","title":"Pipeline be\u00e9getve Job definitionba","text":"<pre><code>pipelineJob('CI - LOCAL') {\ndefinition {\n    cps {\n        script(\"\"\"\\\n        pipeline{\n            agent {\n                label \"nodejs-agent\"\n            }\n            stages {\n                stage(\"Git clone\"){\n                    steps{\n                        git url:\"https://github.com/Zsomx/express_example.git\"\n                    }\n                }\n                stage(\"NPM install\"){\n                    steps{\n                        sh \"npm i\"\n                    }\n                }\n                stage(\"Test\"){\n                    steps{\n                        sh 'npm run-script test'\n                    }\n                }\n            }\n        }\"\"\".stripIndent())\n        }\n    }\n}\n</code></pre> <p>Az el\u0151z\u0151t\u0151l elt\u00e9r\u00e9s, hogy itt nem git alap\u00fa defin\u00edci\u00f3ja van hanem r\u00f6gt\u00f6n itt van defini\u00e1lva a pipeline is. Szintaktikailag fontos, hogy a pipeline code multiline stringben van!</p>"},{"location":"jenkins/#minta-feladat-mukodese-beadandonal-lehet-es-ajanlott-erre-epitkezni","title":"Minta feladat m\u0171k\u00f6d\u00e9se (beadand\u00f3n\u00e1l lehet \u00e9s aj\u00e1nlott erre \u00e9p\u00edtkezni)","text":""},{"location":"jenkins/#beuzemeles","title":"Be\u00fczemel\u00e9s","text":"<ol> <li>Vagrantfile futtat\u00e1sa l\u00e9trehoz nek\u00fcnk egy komplett VM-et, benne a Jenkinsel \u00e9s Registryvel.</li> <li>A jenkins.yml futtat\u00e1sakor el\u0151sz\u0151r buildeli a jenkins.dockerfile-t.<ul> <li>Ez kib\u0151v\u00edti a Jenkisnt plugin el\u0151telep\u00edt\u00e9ssel (jenkins/docker/config/plugins.text).</li> <li>Enged\u00e9lyezi, hogy felhaszn\u00e1l\u00f3 l\u00e9trehoz\u00e1s n\u00e9lk\u00fcl haszn\u00e1lhat\u00f3 legyen.</li> <li>Defini\u00e1lja, hogy a Jenkins honnan olvassa fel a konfigur\u00e1ci\u00f3t.</li> </ul> </li> <li>A Jenkins indul\u00e1sakor felolvassa a jenkins/docker/config mappa f\u00e1jljait \u00e9s a 8080-as porton figyel, melyet a Vagrant 8081-es portra tov\u00e1bb\u00edtja sz\u00e1munkra (localhost:8081).</li> <li>general.yml: Alapvet\u0151 be\u00e1ll\u00edt\u00e1sok. Ami itt fontos: be\u00e1ll\u00edtja URL-nek a VM bels\u0151 IP c\u00edm\u00e9t.<ul> <li>docker.yml<ul> <li>Defini\u00e1ljuk a Docker API el\u00e9r\u00e9s\u00e9t a Jenkins sz\u00e1m\u00e1ra, hogy utas\u00edt\u00e1sokat adhasson neki. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert minden pipeline 1-1 k\u00fcl\u00f6n kont\u00e9nerben fog futni. Ha a pipeline lefutott, a kont\u00e9ner visszak\u00fcldi az eredm\u00e9nyt \u00e9s t\u00f6rl\u0151dik.</li> <li>docker-agent egy olyan, pipeline \u00e1ltal haszn\u00e1lhat\u00f3 kont\u00e9ner param\u00e9tereit tartalmazza, mely a Docker API el\u00e9r\u00e9s\u00e9t val\u00f3s\u00edtja meg pipeline szinten! Ezt az Express minta alkalmaz\u00e1sunk kont\u00e9neriz\u00e1l\u00e1s\u00e1ra \u00e9s deploymentj\u00e9re haszn\u00e1ljuk majd.</li> <li>nodejs-agent egy olyan, pipeline \u00e1ltal haszn\u00e1lhat\u00f3 kont\u00e9ner param\u00e9tereit tartalmazza, melyben el\u0151re telep\u00edtve van a NodeJS egy verzi\u00f3ja. Ennek seg\u00edts\u00e9g\u00e9vel a minta alkalmaz\u00e1s tesztjeit tudjuk lefuttatni.</li> </ul> </li> <li>pipelines-local.yml: L\u00e9trehoz 3, a f\u00e1jlokban defini\u00e1lt jobot \u00e9s pipeline. Fontos, hogy itt a pipeline k\u00f3dot mag\u00e1t is tartalmazz\u00e1k a konfigur\u00e1ci\u00f3s f\u00e1jlok.</li> <li>pipelines-remote.yml: L\u00e9trehoz 3 jobot, melyek a pipeline f\u00e1jlt a meghat\u00e1rozott git repoban keresik meg. Itt elv\u00e1lik a pipeline k\u00f3dja a Jenkins konfigur\u00e1ci\u00f3j\u00e1t\u00f3l. Ez a jobb megold\u00e1s!</li> </ul> </li> <li>A registry.yml elind\u00edtja a Docker Registry-t. Ide fogjuk felt\u00f6lteni a build ut\u00e1n kapott Docker imageket.</li> </ol>"},{"location":"linux/","title":"Linux alapismeretek (ism\u00e9t\u00e9s)","text":""},{"location":"linux/#daemons-services","title":"Daemons &amp; services","text":""},{"location":"linux/#demonok-azaz-hatterben-futo-szolgaltatasok-kezelese","title":"D\u00e9monok azaz h\u00e1tt\u00e9rben fut\u00f3 szolg\u00e1ltat\u00e1sok kezel\u00e9se","text":"<p>Alapvet\u0151en 2 utas\u00edt\u00e1st haszn\u00e1lunk erre: systemctl \u00e9s a service.</p>"},{"location":"linux/#systemctl","title":"systemctl","text":"<p>Ez a SystemD nev\u0171 program CLI eszk\u00f6ze. Az \u00f3ra r\u00f6vids\u00e9ge \u00e9s f\u00f3kusz\u00e1lts\u00e1ga ok\u00e1n, mi csak a folyamat menedzsment r\u00e9sz\u00e9t fogjuk t\u00e1rgyalni f\u0151k\u00e9nt.</p> <p>R\u00f6vid elm\u00e9let</p> <ul> <li>Inializ\u00e1lja az eg\u00e9sz OS-t</li> <li>Unitokat kezel, sz\u00e1munkra a service t\u00edpus\u00fa unit lesz \u00e9rdekes</li> <li>Unit defin\u00edci\u00f3s f\u00e1jlok 3 helyen tal\u00e1lhat\u00f3ak a Linuxon. Precedencia szint szerint:<ul> <li>/etc/systemd/system</li> <li>/run/systemd/system</li> <li>/lib/systemd/system</li> </ul> </li> </ul> <p>Fontosabb parancsok</p> <ul> <li>systemctl start program-neve</li> <li>systemctl stop program-neve</li> <li>systemctl restart program-neve</li> <li>systemctl enable program-neve:<ul> <li>Enged\u00e9lyezi, hogy automatikusan az OS-el elinduljon a program.</li> </ul> </li> <li>systemctl disable program-neve:<ul> <li>Tiltja, hogy automatikusan elinduljon a program.</li> </ul> </li> <li>systemctl status program-neve:<ul> <li>Program \u00e1llapota, azaz fut-e? Mit futtat? Stb...</li> </ul> </li> </ul>"},{"location":"linux/#etcinitd","title":"/etc/init.d","text":"<p>Vannak olyan esetek, amikor nem standard SystemD \u00e1ltal alkalmazott f\u00e1jlokkal dolgozunk. Ezek a f\u00e1jlok az /etc/init vagy /etc/init.d mapp\u00e1kban landolnak. Ezeknek a felolvas\u00e1s\u00e1t is elv\u00e9gzi, melyek a esetben standard shell script f\u00e1jlok egy adott strukt\u00far\u00e1val.</p>"},{"location":"linux/#service","title":"service","text":"<p>Ma m\u00e1r a systemctl az uralkod\u00f3 ezen ter\u00fcleten, azonban n\u00e9hol fel-fel bukkanak olyan Linux kiad\u00e1sok amik m\u00e1s folyamat kezel\u0151t haszn\u00e1lnak. Mivel nem egys\u00e9ges ezen ter\u00fclete sem teljesen a pingvines rendszernek, elk\u00e9sz\u00fclt a service wrapper utas\u00edt\u00e1s. Ez elmaszkolja el\u0151ll\u00fcnk a t\u00e9nyleges service kezel\u0151t \u00edgy sz\u00e1munkra l\u00e9nyegtelen mi val\u00f3s\u00edtja meg ezt a funkci\u00f3t, ha tudjuk a service utas\u00edt\u00e1sait, tudjuk haszn\u00e1lni.</p> <p>Fontosabb parancsok</p> <ul> <li>service program-neve start</li> <li>service program-neve stop</li> <li>service program-neve restart</li> <li>service program-neve status</li> </ul>"},{"location":"prereq/","title":"El\u0151ismeretek","text":"<p>Mivel a t\u00e1rgy Msc hallgat\u00f3knak k\u00e9sz\u00fclt, ez\u00e9rt felt\u00e9telezz\u00fck az Oper\u00e1ci\u00f3s rendszerek kurzus gyakorlati tud\u00e1s\u00e1nak legal\u00e1bb r\u00e9szleges megl\u00e9t\u00e9t.  Amennyiben sz\u00e1modra ismeretlen teljesen a Linux \u00e9s annak vil\u00e1ga, vagy csak ism\u00e9teln\u00e9l egy nagyot, k\u00f6vetkez\u0151 oktat\u00f3 vide\u00f3kat aj\u00e1nljuk:</p> <ul> <li>Ubuntu alapismeretek: https://www.youtube.com/watch?v=ROjZy1WbCIA</li> <li>Shell scripting alapismeretek: https://www.youtube.com/watch?v=v-F3YLd6oMw</li> </ul> <p>A jegyzetben tal\u00e1lhat\u00f3 Bash \u00e9s Linux le\u00edr\u00e1sok csak r\u00f6vid \u00e9s c\u00e9lir\u00e1nyos ism\u00e9tl\u00e9st szolg\u00e1lnak.</p>"},{"location":"vagrant/","title":"Vagrant","text":""},{"location":"vagrant/#virtualis-gepek","title":"Virtu\u00e1lis g\u00e9pek","text":"<p>A virtu\u00e1lis g\u00e9pek (VM) futtat\u00e1s\u00e1hoz k\u00e9t k\u00f6vetelm\u00e9ny kell teljes\u00fclj\u00f6n:</p> <ul> <li>A CPU kell, hogy t\u00e1mogassa a virtualiz\u00e1ci\u00f3t.</li> <li>Rendelkez\u00e9sre kell \u00e1lljon egy hypervisour program.</li> </ul> <p>Hypervisor t\u00edpusok:</p> <ul> <li>Type 1 vagy bare-metal: Itt az oper\u00e1ci\u00f3s rendszer feladata, hogy VM-eket futtasson a lehet\u0151 legoptim\u00e1lisabban. Nincsen sallang az OS-ben. P\u00e9lda.: ESXi</li> <li>Type 2: Ez egy m\u00e1r megl\u00e9v\u0151 OS-re telep\u00edtett program \u00e9s nem k\u00fcl\u00f6nb\u00f6zik a t\u00f6bbi felhaszn\u00e1l\u00f3 \u00e1ltal futtatott egy\u00e9b dolgokt\u00f3l (Firefox, Word, Fortnite.exe). P\u00e9lda: VirtualBox.</li> </ul> <p>A VM-ek minden esetben egy teljes\u00e9rt\u00e9k\u0171 oper\u00e1ci\u00f3s rendszert futtatnak, k\u00fcl\u00f6n kernellel, network stackel, user managementel stb. A legt\u00f6bb esetben a VM egy virtu\u00e1lis h\u00e1l\u00f3zat m\u00f6g\u00f6tt j\u00f6n l\u00e9tre, \u00edgy ha szervert futtatunk akkor a VM portj\u00e1t tov\u00e1bb\u00edtani kell a host g\u00e9p egy tetsz\u0151leges, szabad portj\u00e1ra. </p>"},{"location":"vagrant/#vm-automatizalas","title":"VM automatiz\u00e1l\u00e1s","text":""},{"location":"vagrant/#klasszikus-eset","title":"Klasszikus eset","text":"<p>Elind\u00edtunk egy VM-et, bel\u00e9p\u00fcnk, kattingatunk vagy parancsokat adunk ki. Ezek eredm\u00e9nyek\u00e9nt telep\u00edtj\u00fck \u00e9s konfigur\u00e1ljuk az OS-t. Ha ez hordozhat\u00f3v\u00e1 szeretn\u00e9nk tenni, akkor export\u00e1lhatjuk OVA/OVF f\u00e1jlba melyet a legt\u00f6bb hypervisor ismer \u00e9s tud kezelni. Ezek a f\u00e1jlok verzi\u00f3zhat\u00f3k azonban ameddig nem futtatjuk \u0151ket, semmit nem tudunk r\u00f3luk.</p>"},{"location":"vagrant/#devops-megkozelites","title":"DevOps megk\u00f6zel\u00edt\u00e9s","text":"<p>Az eg\u00e9sz DevOps n\u00e9zetnek fontos eleme az \u00e1ttekinthet\u0151s\u00e9g. Ezt ebben az esetben az Infrastructure as Code megk\u00f6zel\u00edt\u00e9ssel fogjuk megval\u00f3s\u00edtani. A Vagrant lehet\u0151v\u00e9 teszi sz\u00e1munkra, hogy k\u00f3dk\u00e9nt t\u00e1roljuk az \u00f6sszes tev\u00e9kenys\u00e9get amit egy VM-en elv\u00e9gezn\u00e9nk. Ez\u00e1ltal ak\u00e1r a kimeneti artifact (ova/ovf/box) \u00e9s az azt konfigur\u00e1l\u00f3 k\u00f3d is verzi\u00f3zhat\u00f3. </p>"},{"location":"vagrant/#vagrant_1","title":"Vagrant","text":"<p>Mindig a Vagrantfile-t olvassa fel. Ez egy Ruby f\u00e1jl, melyhez egyedi parancsokat rendel a Vagrant (teh\u00e1t egyfajta gemnek \u00e9rtelmezhet\u0151). Ezek az egyedi f\u00fcggv\u00e9nyek a kiv\u00e1lasztott hypervisoral kommunik\u00e1lnak. A kiindul\u00e1s mindig egy megl\u00e9v\u0151 VM (ebben a terminol\u00f3gi\u00e1ban boxnak nevezz\u00fck) aminek a hardveres param\u00e9tereit m\u00f3dos\u00edtjuk majd parancsokat hajtunk v\u00e9gre rajta.</p> <p>Fontosabb parancsok:</p> <pre><code>    vagrant help\n</code></pre> <p>Rendelkez\u00e9sre \u00e1ll\u00f3 parancsok \u00e9s azok r\u00f6vid le\u00edr\u00e1sa.</p> <pre><code>    vagrant up\n</code></pre> <p>Az aktu\u00e1lis mapp\u00e1ban tal\u00e1lhat\u00f3 vagrantfile-t v\u00e9grehajtja.</p> <pre><code>    vagrant halt\n</code></pre> <p>Az aktu\u00e1lis mapp\u00e1ban tal\u00e1lhat\u00f3 vagrantfile \u00e1ltal l\u00e9trehozott VM-et meg\u00e1ll\u00edtja.</p> <pre><code>    vagrant destroy\n</code></pre> <p>Az aktu\u00e1lis mapp\u00e1ban tal\u00e1lhat\u00f3 vagrantfile \u00e1ltal l\u00e9trehozott VM-et t\u00f6rli a hypervisorb\u00f3l.</p> <pre><code>    vagrant provision\n</code></pre> <p>Az aktu\u00e1lis mapp\u00e1ban tal\u00e1lhat\u00f3 vagrantfile provision blokkjait \u00fajra v\u00e9grehajtja.</p> <p>Felmer\u00fcl\u0151 probl\u00e9m\u00e1k:</p> <ul> <li>Gitben t\u00e1rolva hogyan kezelj\u00fcnk jelszavakat, kulcsokat... stb.</li> <li>Alap esetben kimeneti artifactot nem \u00e1ll\u00edt el\u0151.</li> <li>Hypervisor f\u00fcgg\u0151 VM-ek. A kiindul\u00e1si boxok m\u00e1r egy adott hypervisorhoz k\u00f6t\u0151dnek, ezen m\u00f3dos\u00edtani itt nem lehet. Term\u00e9szetesen vannak megold\u00e1sok r\u00e1, de ez k\u00edv\u00fcl esik az \u00f3ra keretein m\u00e1r.</li> </ul>"}]}
Vagrant.configure("2") do |config|
  ###Common for all###
  config.vm.box = "file://./../packer/artifact/package.box"

  ###VM specific###
  config.vm.define "ops_base" do |d|
    d.vm.network "private_network", ip: "192.168.2.2"
    #Registry#
    d.vm.network "forwarded_port", guest: 5000, host: 5000
    #Kibana#
    d.vm.network "forwarded_port", guest: 5601, host: 5601
    #Jenkins#
    d.vm.network "forwarded_port", guest: 8081, host: 8081
    #Sonar#
    d.vm.network "forwarded_port", guest: 9000, host: 9000
    #Portainer
    d.vm.network "forwarded_port", guest: 9001, host: 9001
    d.vm.provider "virtualbox" do |v|
      v.name = "OpVM"
      v.memory = 4096
      v.cpus = 2
    end
    config.vm.synced_folder "./../Docker/DevOpsInfra", "/home/vagrant/docker"
    d.trigger.after [:up, :reload, :provision] do |t|
      t.run_remote = {path: "./scripts/ops_base/start_up.sh"}
    end
    d.trigger.before [:suspend, :destroy] do |t|
      t.run_remote = {path: "./scripts/ops_base/shut_down.sh"}
    end
  end
  config.vm.define "app_server" do |app|
    app.vm.network "private_network", ip: "192.168.2.3"
    app.vm.provider "virtualbox" do |v|
      v.name = "AppVM"
      v.memory = 1024
      v.cpus = 1
    end
    app.vm.provision "file", source: "./../Docker/app/daemon.json", destination: "/home/vagrant/"
    app.vm.provision "file", source: "./../Docker/app/filebeat-dc.yaml", destination: "/home/vagrant/"
    app.vm.provision "file", source: "./../Docker/app/filebeat-config.yaml", destination: "/home/vagrant/"
    app.vm.provision "shell", path: "./scripts/app_server/provision.sh"
    app.trigger.after [:up, :reload, :provision] do |t|
      t.run_remote = {path: "./scripts/app_server/start_up.sh"}
    end
    app.trigger.before [:suspend, :destroy] do |t|
      t.run_remote = {path: "./scripts/app_server/shut_down.sh"}
    end
  end

end

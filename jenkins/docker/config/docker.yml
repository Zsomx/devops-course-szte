# Docker agent definiálás a Jenkinshez
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  clouds:
  - docker:
      dockerApi:
        dockerHost:
          uri: "tcp://192.168.56.5:2376" # Docker API elérése a VM-ben. Ezzel kommunákál a Jenkins a pipelineok futtatásakor használt konténerek létrehozásához és törléséhez.
      name: "docker"
      templates:
      - connector:
          jnlp:
            jnlpLauncher:
              workDirSettings:
                disabled: false
                failIfWorkDirIsMissing: false
                internalDir: "remoting"
        dockerTemplateBase:
          cpuPeriod: 0
          cpuQuota: 0
          dnsHosts:
          - "8.8.8.8"
          dnsString: "8.8.8.8"
          image: "jenkins/jnlp-agent-node" # Docker image NodeJS pipeline futtatásához
        instanceCapStr: "10"
        labelString: "nodejs-agent" # Label ami alapján a pipeline hivatkozik erre az agentre, hogy ebben fusson.
        remoteFs: "/home/node"
        retentionStrategy:
          idleMinutes: 1
      - connector:
          jnlp:
            jnlpLauncher:
              workDirSettings:
                disabled: false
                failIfWorkDirIsMissing: false
                internalDir: "remoting"
            user: root
        dockerTemplateBase:
          cpuPeriod: 0
          cpuQuota: 0
          dnsHosts:
          - "8.8.8.8"
          dnsString: "8.8.8.8"
          image: "jenkins/jnlp-agent-docker" # Docker image Docker API eléréshez PIPELINE szinten.
        instanceCapStr: "10"
        labelString: "docker-agent" # Label ami alapján a pipeline hivatkozik erre az agentre, hogy ebben fusson.
        nodeProperties:
        - envVars:
            env:
            - key: "DOCKER_HOST" # Környezeti változó, a Docker API elérésének tárolására.
              value: "tcp://192.168.56.5:2376"
        remoteFs: "/home/jenkins"
        retentionStrategy:
          idleMinutes: 1